{"version":3,"sources":["components/navbar.js","components/meal.js","components/meals.js","components/products.js","components/productModal.js","components/cart.js","components/store.js","components/stores.js","components/createUser.js","components/editMeal.js","components/auth/login.js","components/auth/register.js","components/createMeal.js","components/orders.js","components/body.js","components/loginModal.js","components/registerModal.js","components/alert.js","components/sidebar.js","components/index.js","serviceWorker.js","index.js"],"names":["NavigationbBar","props","useState","Cookies","get","location","useLocation","pathname","selectedNav","setSelectedNav","handleActive","clickedNav","console","log","isLoggedIn","Navbar","className","expand","fixed","Toggle","aria-controls","Collapse","id","Brand","href","Nav","to","onClick","setShowLoginModal","setShowRegisterModal","Meal","prop","meal","setMeal","quantity","price","setPrice","isSubmitted","useParams","useEffect","axios","then","response","data","catch","error","formik","useFormik","initialValues","notes","onSubmit","values","name","store_id","handleCartSubmit","window","history","back","useSpring","opacity","from","Fragment","div","style","src","image_name","width","handleSubmit","ingredients","selectedQuantity","totalMealPrice","calPrice","onChange","handleChange","value","rows","placeholder","type","Meals","state","cart","totalPrice","meals","isLoaded","setState","this","getMeals","map","el","index","key","height","marginLeft","marginBottom","imageName","Component","Products","storeProducts","paddingRight","paddingLeft","objectFit","icon","faClock","Button","showProductModal","ProductModal","setQuantity","modalproduct","closeProductModal","handleAlert","Modal","show","showProduct","onHide","centered","Header","closeButton","Title","alt","Body","ButtonGroup","aria-label","variant","decreaseQuantity","disabled","increaseQuantity","Cart","isPost","setPosted","order","form","checkLogin","FormData","append","post","headers","Authorization","handleEditFormChange","faEdit","handleCartDelete","faTrash","parseFloat","calTotalPrice","Store","backgroundImage","getStore","imageUpload","backgroundSize","description","operation_hours","products","showLoginModal","stores","setStores","prepTime","handleGetStore","CreateUser","email","password","password_confirmation","createUserForm","set","access_token","expires","user","htmlFor","required","EditMeal","btnStatus","pressBtn","x","filter","obj","handleEditSubmit","toFixed","Login","login","res","Register","CreateMeal","productName","createMealForm","createMeal","event","setFieldValue","currentTarget","files","Orders","setOrder","user_id","statusObj","1","2","3","status","newObj","JSON","parse","formConfig","exact","path","storeDetails","handleStoreImageUpdate","onQuantityChange","onNoteChange","orderForm","onPriceChange","onMealChange","onEditSubmit","LoginModal","setLogin","RegisterModal","showRegisterModal","Alert","Toast","showAlert","delay","autohide","position","top","right","backgroundColor","color","showAlertMessage","SideBar","Index","storeImage","setStoreImage","setCart","setShowProduct","setShowAlert","setShowAlertMessage","setStore","setProducts","setModalProduct","setStoreDetails","message","setTimeout","cartObj","oldObj","push","handleModalLogin","alert","config","deleteId","deleteItem","handleCartView","document","getElementById","ReactDOM","render","Boolean","hostname","match","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3933aeb3.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, useLocation, Link} from \"react-router-dom\";\nimport Cookies from 'js-cookie';\nimport {faShoppingCart} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\n\nfunction NavigationbBar(props) {\n    const [token,\n        setToken] = useState(Cookies.get('token'));\n    const location = useLocation();\n    const [selectedNav,\n        setSelectedNav] = useState(location.pathname);\n    function logout() {\n        alert('test');\n        Cookies.remove('token');\n    }\n\n    const handleActive = (clickedNav) => {\n        setSelectedNav(clickedNav);\n        console.log(location.pathname);\n    }\n\n    if (props.isLoggedIn) {\n        return (\n            <Navbar\n                className=\"navbar navbar-expand-lg navbar-light bg-blue shadow-sm\"\n                expand=\"lg\"\n                fixed=\"top\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Navbar.Brand href=\"#home\">touch&go</Navbar.Brand>\n                    <Nav className=\"text-center ml-auto\">\n                        <Link\n                            className={selectedNav === '/'\n                            ? 'active nav-link'\n                            : 'nav-link'}\n                            to=\"/\"\n                            onClick={() => {\n                            handleActive('/')\n                        }}>Home\n                            <span className=\"sr-only\">(current)</span>\n                        </Link>\n                        <Link\n                            className={selectedNav === '/stores'\n                            ? 'active nav-link'\n                            : 'nav-link'}\n                            to=\"/stores\"\n                            onClick={() => handleActive('/stores')}>View stores\n                            <span className=\"sr-only\">(current)</span>\n                        </Link>\n                        <Link\n                            className={selectedNav === '/orders'\n                            ? 'active nav-link'\n                            : 'nav-link'}\n                            to=\"/orders\"\n                            onClick={() => {handleActive('/orders');}}>Orders\n                            <span className=\"sr-only\">(current)</span>\n                        </Link>\n                        <Link\n                            className={selectedNav === '/Logout'\n                            ? 'active nav-link'\n                            : 'nav-link'}\n                            // to=\"/login\"\n                            onClick={() => {handleActive('/Orders'); }}>Logout\n                            <span className=\"sr-only\">(current)</span>\n                        </Link>\n\n                        {/* <Nav.Link href=\"/stores\">View stores</Nav.Link>\n      <Nav.Link href=\"/login\">Login</Nav.Link>\n      <Nav.Link href=\"/register\">Register</Nav.Link> */}\n                    </Nav>\n                    {/* <Form inline>\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n      <Button variant=\"outline-info\">Search</Button>\n    </Form> */}\n                </Navbar.Collapse>\n            </Navbar>\n            \n\n        );\n    } else {\n        return (\n            <Navbar\n                className=\"navbar navbar-expand-lg navbar-light bg-blue shadow-sm\"\n                expand=\"lg\"\n                fixed=\"top\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Navbar.Brand href=\"#home\">touch&go</Navbar.Brand>\n                    <Nav className=\"text-center ml-auto\">\n                        <Link\n                            className={selectedNav === '/'\n                            ? 'active nav-link'\n                            : 'nav-link'}\n                            to=\"/\"\n                            onClick={() => {\n                            handleActive('/')\n                        }}>Home\n                            <span className=\"sr-only\">(current)</span>\n                        </Link>\n                        <Link\n                            className={selectedNav === '/stores'\n                            ? 'active nav-link'\n                            : 'nav-link'}\n                            to=\"/stores\"\n                            onClick={() => handleActive('/stores')}>View stores\n                            <span className=\"sr-only\">(current)</span>\n                        </Link>\n                        <Link\n                            className={selectedNav === '/login'\n                            ? 'active nav-link'\n                            : 'nav-link'}\n                            // to=\"/login\"\n                            onClick={() => {handleActive('/login'); props.setShowLoginModal(true)}}>Login\n                            <span className=\"sr-only\">(current)</span>\n                        </Link>\n                        <Link\n                            className={selectedNav === '/register'\n                            ? 'active nav-link'\n                            : 'nav-link'}\n                            // to=\"/register\"\n                            onClick={() =>{ handleActive('/register'); props.setShowRegisterModal(true)}}>Register\n                            <span className=\"sr-only\">(current)</span>\n                        </Link>\n\n                        {/* <Nav.Link href=\"/stores\">View stores</Nav.Link>\n      <Nav.Link href=\"/login\">Login</Nav.Link>\n      <Nav.Link href=\"/register\">Register</Nav.Link> */}\n                    </Nav>\n                    {/* <Form inline>\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n      <Button variant=\"outline-info\">Search</Button>\n    </Form> */}\n                </Navbar.Collapse>\n            </Navbar>\n\n        // <nav className=\"navbar navbar-expand-lg navbar-light bg-blue shadow-sm\">\n        // <Link className=\"navbar-brand\" to=\"/\">Touch & Go</Link>     <button\n        // className=\"navbar-toggler\"         type=\"button\" data-toggle=\"collapse\"\n        //   data-target=\"#navbarSupportedContent\"\n        // aria-controls=\"navbarSupportedContent\"         aria-expanded=\"false\"\n        // aria-label=\"Toggle navigation\">         <span\n        // className=\"navbar-toggler-icon\"></span>     </button>     <div\n        // className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">         <ul\n        // className=\"navbar-nav ml-auto\">             <li className=\"nav-item active\">\n        //               <Link className=\"nav-link\" to=\"/\">Home <span\n        // className=\"sr-only\">(current)</span>                 </Link>  </li>\n        //   <li className=\"nav-item\">                 <Link className=\"nav-link\"\n        // to=\"/stores\">View stores</Link>             </li>      {/*\n        // {props.cartTotal.length > 0                 ? <li className=\"nav-item\">\n        //                   <Link className=\"nav-link\" to=\"/cart\"><FontAwesomeIcon\n        // icon={faShoppingCart}/>   <span>\n        // {props.cartTotal.length}</span>                    </Link>\n        //  </li>                 : ''         } */}             <li\n        // className=\"nav-item\">                 <Link className=\"nav-link\"\n        // to=\"/login\">Login</Link>             </li> <li className=\"nav-item ml-auto\">\n        //                <Link className=\"nav-link\" to=\"/register\">Register</Link>\n        //        </li>         </ul>     </div> </nav>\n        );\n    }\n\n}\n\nexport default NavigationbBar;\n","import React, { useState, useEffect } from 'react';\nimport {\n   Link,\n   Redirect,\n   useParams\n } from \"react-router-dom\";\n import {useSpring, animated} from 'react-spring'\n import { useFormik } from 'formik';\n import axios from 'axios';\n\nconst Meal = (prop) => {\n    const [meal, setMeal] = useState(0);\n    const [quantity, changeQuantity] = useState(0);\n    let [price, setPrice] = useState(0);\n    const [notes, changeNotes] = useState(0);\n    const [isSubmitted, setSubmitted] = useState(false);\n    const { id } = useParams();\n\n    useEffect(() => {\n      // getStores();\n      axios.get(`http://localhost:8000/api/meal/${id}`)\n        .then( (response) =>  {\n            // handle success\n            // const response =\n            console.log(response.data);\n            // return\n            setMeal(response.data);\n            setPrice(response.data.price);\n            // this.setState({meals: response.data});\n\n        })\n        .catch(function (error) {\n            // handle error\n            // alert('yessss')\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n\n  \n    },[id]);    \n\n\n\n  const calPrice = function(selectedQuantity, price){\n    let totalMealPrice = selectedQuantity * price;\n    console.log(price);\n    return totalMealPrice;\n}\n\n\nconst formik = useFormik({\ninitialValues: {\n    id: id,\n    price,\n    notes: '',\n    quantity: ''\n},\nonSubmit: values => {\n    values.price = price;\n    values.name = meal.name;\n    values.quantity = quantity;\n    values.store_id = meal.store_id;\n   //  console.log(values);\n    prop.handleCartSubmit(values);\n    window.history.back();\n},\n});\n\n\n  const props = useSpring({opacity: 1, from: {opacity: 0}})\n// render() {\n   if(isSubmitted){\n      return <Redirect to=\"/orders\" />\n   }else{\n    return (\n        <React.Fragment>\n            <animated.div style={props}>\n          {/* <div className=\"jumbotron col-12\" style={{backgroundImage: `url(http://localhost:8000/storage/${meal.imageName}`, backgroundSize: `cover`, height: `300px` }}>\n         </div>  */}\n         <div className=\"container\">\n             <div className=\"row\">\n                <div className=\"col\">\n                    <img src={`http://localhost:8000/storage/${meal.image_name}`}  style={{ width: '100%' }}/>\n                </div>\n                <div className=\"col\">\n                <form onSubmit={formik.handleSubmit}>\n            <div className=\"row\">\n               <div className=\"col\">\n                  <h1 className=\"text-center\">{meal.name}</h1>\n               </div>\n            </div>\n            <div className=\"row\">\n               <div className=\"col\">\n                  <h6 className=\"text-center\">Ingredients: {meal.ingredients}</h6>\n               </div>\n            </div>\n            <div className=\"row\">\n               <div className=\"col\">\n                  <h6 className=\"text-center\">R{calPrice(formik.values.quantity, price)}</h6>\n               </div>\n            </div>\n            <div className=\"form-group\">\n               <label >Quantity</label>\n               <select className=\"form-control\" id=\"quantity\" name=\"quantity\" onChange={formik.handleChange} value={formik.values.quantity}>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n               </select>\n            </div>\n\n            <div className=\"form-group\">\n               <label >Note to preparer</label>\n               <textarea className=\"form-control\" rows=\"3\" placeholder=\"Example remove lettuce\" name=\"notes\" id=\"notes\" value={formik.values.notes} onChange={formik.handleChange}/>\n            </div>\n            <div className=\"row\">\n               <div className=\"col align-self-center\">\n                  <button className=\"btn btn-success btn-block\" type=\"submit\">Add to Order</button>\n               </div>\n            </div>\n            </form>\n                </div>\n             </div>\n         </div>\n         </animated.div>\n        </React.Fragment>\n\n     );\n   }\n}\n// }\n\nexport default Meal;\n","import React, { Component } from 'react';\nimport {\n    Link\n  } from \"react-router-dom\";\n  import axios from 'axios'\n\nclass Meals extends Component {\n\n    state = {\n        cart: [],\n        totalPrice: 0,\n        meals: [],\n        isLoaded: null,\n        error: null\n    }\n\n    getMeals(){\n        axios.get('http://localhost:8000/api/meal')\n        .then( (response) =>  {\n            // handle success\n            this.setState({meals: response.data});\n            console.log(this.state.meals);\n\n        })\n        .catch(function (error) {\n            // handle error\n            // alert('yessss')\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n\n    }\n    componentDidMount() {\n        this.getMeals();\n    }\n\n    render() {\n    return (\n        <React.Fragment>\n        {\n        this.state.meals.map((el, index) =>\n            <div className=\"card col-3 text-center\" key={index} style={{ width: '18rem', height: '18rem', marginLeft: '20px', marginBottom: '20px' }}>\n            <img className=\"card-img-top\" src={`http://localhost:8000/storage/${el.imageName}`} style={{ width: '100% !important' }}/>\n            <div className=\"card-body\">\n            <h5 className=\"card-title\">{ el.name }</h5>\n                <p className=\"card-text\">{ el.price }</p>\n                <Link className=\"btn btn-success\" to={`/meal/${el.id}`}>View</Link>\n            </div>\n        </div>\n        )}\n    </React.Fragment>\n    )\n    }\n}\n\n\nexport default Meals;\n\n","import React, {useState, useEffect} from 'react';\nimport {useParams, Link} from \"react-router-dom\";\nimport {useSpring, animated} from 'react-spring';\nimport {faClock} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Button} from 'react-bootstrap';\n\nconst Products = (prop) => {\n    const [meal,\n        setMeal] = useState(0);\n    const [quantity,\n        changeQuantity] = useState(0);\n    let [price,\n        setPrice] = useState(0);\n    const [notes,\n        changeNotes] = useState(0);\n    const {id} = useParams();\n\n    const props = useSpring({\n        opacity: 1,\n        from: {\n            opacity: 0\n        }\n    })\n\n    return (\n        <React.Fragment>\n            {/* <animated.div style={props}> */}\n            {prop\n                .storeProducts\n                .map((el, index) => <div\n                    className=\"card col-md-3  text-right\"\n                    key={index}\n                    style={{\n                    width: '18rem',\n                    marginLeft: '20px',\n                    marginBottom: '20px',\n                    paddingRight: '0',\n                    paddingLeft: '0'\n                }}>\n                    <img\n                        className=\"card-img-top\"\n                        src={`http://localhost:8000/storage/${el.image_name}`}\n                        style={{\n                        width: '100% !important',\n                        height: '15vw',\n                        objectFit: 'cover'\n                    }}/>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title text-center\">{el.name}</h5>\n                        <p className=\"card-text text-center\"><FontAwesomeIcon icon={faClock}/> {\"15-25 min\"}</p>\n                        <h6 className=\"text-center\">R{el.price}</h6>\n                        <Button\n                            className=\"btn btn-success btn-block\"\n                            onClick={() => {\n                            prop.showProductModal(index)\n                        }}\n                            id={index}>View</Button>\n                    </div>\n                </div>)}\n        </React.Fragment>\n\n    );\n}\n\nexport default Products;\n","import React, {useState} from 'react';\nimport {Modal, Button, ButtonGroup} from 'react-bootstrap';\nimport {useFormik} from 'formik';\n\nconst ProductModal = (props) => {\n    const [quantity, setQuantity] = useState(1);\n    const [id,\n        setId] = useState(props.modalproduct.id);\n    const calPrice = function (selectedQuantity, price) {\n        // console.log(selectedQuantity);\n        let totalMealPrice = selectedQuantity * price;\n        // console.log(totalMealPrice); setPrice(totalMealPrice);\n        return totalMealPrice;\n    }\n\n    const increaseQuantity = (quantity) => {\n        let newQuantity = quantity + 1;\n        setQuantity(newQuantity);\n    }\n\n    const decreaseQuantity = (quantity) => {\n        let newQuantity = quantity - 1;\n        setQuantity(newQuantity)\n    }\n    // console.log(id);\n    const formik = useFormik({\n        initialValues: {\n            notes: '',\n            quantity\n        },\n        onSubmit: values => {\n            // values.price = price; values.name = meal.name; values.quantity = quantity;\n            values.name = props.modalproduct.name;\n            values.price = props.modalproduct.price;\n            values.quantity = quantity;\n            console.log(values);\n            // return\n            const add = () => {\n                props.handleCartSubmit(values)\n            }\n            // props.handleCartSubmit(values); alert('testing')\n            add();\n            props.closeProductModal();\n            props.handleAlert('Added to cart.');\n        }\n    })\n\n    return (\n        <React.Fragment>\n\n            <Modal show={props.showProduct} onHide={props.closeProductModal} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.modalproduct.name}</Modal.Title>\n                </Modal.Header>\n                    <img\n                        src={`http://localhost:8000/storage/${props.modalproduct.image_name}`}\n                        alt={''}\n                        style={{\n                        width: '100%',\n                        height: '328px'\n                    }}/>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            {/* <div className=\"col mb-3\"> */}\n\n                            {/* </div> */}\n                        </div>\n                        <div className=\"row\">\n                            {/* <div className=\"col\">\n                            <img\n                        src={`http://localhost:8000/storage/${props.modalproduct.image_name}`}\n                        alt={''}\n                        style={{\n                        width: '100%'\n                    }}/>\n                            </div> */}\n                            <div className=\"col\">\n                                <form onSubmit={formik.handleSubmit}>\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <h1 className=\"text-center\">{props.modalproduct.name}</h1>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <h6 className=\"text-center\">Ingredients: {props.modalproduct.ingredients}</h6>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <h6 className=\"text-center\">R {calPrice(quantity, props.modalproduct.price)}\n                                            </h6>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"form-group\">\n                                        <label >Quantity</label>\n                                        <select\n                                            className=\"form-control\"\n                                            id=\"quantity\"\n                                            name=\"quantity\"\n                                            onChange={formik.handleChange}\n                                            value={formik.values.quantity}>\n                                            <option value=\"1\">1</option>\n                                            <option value=\"2\">2</option>\n                                            <option value=\"3\">3</option>\n                                            <option value=\"4\">4</option>\n                                            <option value=\"5\">5</option>\n                                        </select>\n                                    </div> */}\n                                    <div className=\"row\">\n                                        <div className=\"col text-center\">\n                                        <ButtonGroup aria-label=\"Basic example\">\n                                            <Button variant=\"secondary\" onClick={()=> {decreaseQuantity(quantity)} }>-</Button>\n                                            <Button variant=\"secondary\" disabled>{quantity}</Button>\n                                            <Button variant=\"secondary\" onClick={()=> {increaseQuantity(quantity)}}>+</Button>\n                                        </ButtonGroup>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label >Note to preparer</label>\n                                        <textarea\n                                            className=\"form-control\"\n                                            rows=\"3\"\n                                            placeholder=\"Example remove lettuce\"\n                                            name=\"notes\"\n                                            id=\"notes\"\n                                            value={formik.values.notes}\n                                            onChange={formik.handleChange}/>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col align-self-center\">\n                                            <button className=\"btn btn-success btn-block\" type=\"submit\">Add to Order</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n\n                    </div>\n                    {/* </div> */}\n                </Modal.Body>\n                {/* <Modal.Footer>\n                    <Button variant=\"secondary\" //   onClick={handleClose\n                >\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" //   onClick={handleClose\n                >\n                        Save Changes\n                    </Button>\n                </Modal.Footer> */\n            } \n            </Modal>\n        </React.Fragment >)\n        }\n\n        export default ProductModal;\n","import React, { useState } from 'react';\nimport {\n    Link,\n    Redirect\n  } from \"react-router-dom\";\n  import Cookies from 'js-cookie';\n  import { useFormik } from 'formik';\n  import axios from 'axios';\n  import {faTrash, faEdit} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst Cart = (props) => {\n    const [isPost, setPosted] = useState(false);\n\n    let calPrice = (selectedQuantity, price) => {\n        let totalMealPrice = selectedQuantity * price;\n        return totalMealPrice.toFixed(2);\n    }\n\n    let calTotalPrice = () => {\n        let totalPrice = 0;\n        props.cart.map((el) => {\n            totalPrice = totalPrice + (parseFloat(el.price) * el.quantity);\n        })\n        console.log(totalPrice);\n        return totalPrice;\n    }\n\n    let saveOrder = (form) => {\n        if(props.checkLogin()){\n        axios.post(`http://localhost:8000/api/order`, form,\n        {\n          headers: {\n            Authorization: 'Bearer ' + Cookies.get('token')\n          }\n        })\n        .then( (response) =>  {\n            setPosted(true);\n        //    console.log(response);\n            if (!props.isLoggedIn) {\n                \n                return;\n            }\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n    }\n    // else{\n        \n    // }\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            order: props.cart,\n        },\n        onSubmit: values => {\n            // check if loggedin then show modal\n            console.log(values);\n\n            props.checkLogin();\n            // return;\n            console.log(values); \n            let createUserForm = new FormData();\n            createUserForm.append('order', values.order);\n            saveOrder(values);\n        }\n    });\n\n        if(isPost){\n            return <Redirect to=\"/orders\" />\n        }else{\n        return (\n            <React.Fragment>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                        <th>Meal</th>\n                        <th>Quantity</th>\n                        <th>Price</th>\n                        <th>Action</th>\n                        </tr>\n\n                    </thead>\n                    <tbody>\n\n                        {\n                        props.cart.map((el, index) =>\n                        {\n                            if (el !== 'undefined') {\n                           return <tr key={el.id}>\n                                <td>{el.name}</td>\n                                <td>{el.quantity}</td>\n                                <td>{el.price}</td>\n                                <td>\n                                     <Link className=\"btn btn-sm btn-success\" to={`/cart/edit/${el.id}`} onClick={() => props.handleEditFormChange(index) }><FontAwesomeIcon icon={faEdit}/></Link>\n                                     <span className=\"ml-2\" value={index} price={el.price} id=\"delete\" onClick={() => props.handleCartDelete(index)}><FontAwesomeIcon icon={faTrash}/></span></td>\n                                </tr>\n                            }\n                        }\n\n                        )\n                    }\n                        <tr>\n                        <td>Total</td>\n                        <td></td>\n                        <td>{calTotalPrice()}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <form onSubmit={formik.handleSubmit}>\n                <input type=\"hidden\" name=\"order\" id=\"order\" onChange={formik.handleChange} value={formik.values.order}/>\n                <button className=\"btn btn-info\" type=\"submit\">Send order</button>\n                </form>\n            </React.Fragment>\n         );\n        }\n    }\n\n\nexport default Cart;\n","import React, {useState, useEffect} from 'react';\nimport {useParams, Link} from \"react-router-dom\";\nimport {useFormik} from 'formik';\nimport axios from 'axios';\nimport Products from './products'\nimport ProductModal from './productModal'\nimport Cart from './cart'\n\nconst Store = (props) => {\n    const {id} = useParams();\n    const x = 0;\n    // props.handleGetStore(id)\n\n    // get product from products\n\n\n    \n        // useEffect(() => {\n        //     props.handleGetStore(id)\n\n        // }, [x, id, props]);\n\n        return (\n            <React.Fragment>\n                {/* <div className=\"container\"> */}\n                <div\n                    className=\"jumbotron\"\n                    style={{\n                    backgroundImage: `url(http://localhost:8000/storage/${props.getStore.imageUpload})`,\n                    backgroundSize: `cover`,\n                    height: `300px`\n                }}></div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h1>{props.getStore.name}</h1>\n\n                    </div>\n                    <div className=\"row\">\n                        <p>{props.getStore.description}</p>\n                    </div>\n                    <div className=\"row\">\n                        <h5>Hours: {props.getStore.operation_hours}</h5>\n                    </div>\n                    <div className=\"row\">\n                        <h5>Meals on offer</h5>\n                    </div>\n                    {/* </div> */}\n                    {/* <div className=\"container\"> */}\n                    <div className=\"row\">\n                        <div className=\" col-md-8 col-sm-12\">\n                            <div className=\"row\">\n                                <Products showProductModal={props.showProductModal} storeProducts={props.products}/>\n                            </div>\n                        </div>\n                        <div className=\" col-md-4  col-sm-12\">\n                            <div className=\"row\">\n                                <Cart\n                                    checkLogin={props.checkLogin}\n                                    setShowLoginModal={props.setShowLoginModal}\n                                    isLoggedIn={props.isLoggedIn}\n                                    showLoginModal={props.showLoginModal}\n                                    cart={props.cart}\n                                    handleCartDelete={props.handleCartDelete}/> {/* <Product storeProducts={stores}/> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ProductModal\n                    handleAlert={props.handleAlert}\n                    handleCartSubmit={props.handleCartSubmit}\n                    modalproduct={props.modalproduct}\n                    closeProductModal={props.closeProductModal}\n                    showProduct={props.showProduct}\n                    />\n            </React.Fragment>\n        );\n    }\n\n    export default Store;","import React, { useState, useEffect } from 'react'; \nimport {\n    useParams, Link\n  } from \"react-router-dom\";\n  import { useFormik } from 'formik';\n  import axios from 'axios';\n\nconst Store = (props) => {\n    const { id } = useParams();\n    const [stores, setStores] = useState([]);\n\n    const formik = useFormik({\n        initialValues: {\n            notes: '',\n            quantity: ''\n        },\n        onSubmit: values => {\n            // values.price = price; values.name = meal.name; values.quantity = quantity;\n            values.name = props.modalproduct.name;\n            values.price = props.modalproduct.price;\n            // values.quantity = quantity;\n            console.log(values);\n            // return\n            const add = () => {\n                props.handleCartSubmit(values)\n            }\n            // props.handleCartSubmit(values); alert('testing')\n            add();\n            props.closeProductModal();\n            props.handleAlert('Added to cart.');\n        }\n    })\n        useEffect(() => {\n            axios.get(`http://localhost:8000/api/store`)\n                .then( (response) =>  {\n                    // return\n                    setStores(response.data);\n                    console.log(response.data);\n                    return response.data;\n        \n                })\n                .catch(function (error) {\n                    console.log(error);\n                })\n                .then(function () {\n                    // always executed\n                });\n        \n          },[]);    \n  \n    return ( \n        <React.Fragment>\n            <div className=\"row\">\n            <h4>Filter</h4>\n            </div>\n        <div className=\"row\">\n            <div className=\"col\">\n                   <div className=\"form-group\">\n                <label >Store type</label>\n                <select className=\"form-control\" id=\"quantity\" onChange={formik.handleChange} value={formik.values.prepTime}>\n                   <option value=\"1\">5min</option>\n                   <option value=\"2\">10min</option>\n                   <option value=\"3\">15min</option>\n                   <option value=\"4\">20min</option>\n                   <option value=\"5\">25min</option>\n                   <option value=\"5\">30min</option>\n                   <option value=\"5\">35min</option>\n                   <option value=\"5\">45min</option>\n                   <option value=\"5\">50min</option>\n                   <option value=\"5\">55min</option>\n                   <option value=\"5\">Hour</option>\n                </select>\n             </div>\n                </div>\n                <div className=\"col\">\n                   <div className=\"form-group\">\n                <label >Location</label>\n                <select className=\"form-control\" id=\"quantity\" onChange={formik.handleChange} value={formik.values.prepTime}>\n                   <option value=\"1\">5min</option>\n                   <option value=\"2\">10min</option>\n                   <option value=\"3\">15min</option>\n                   <option value=\"4\">20min</option>\n                   <option value=\"5\">25min</option>\n                   <option value=\"5\">30min</option>\n                   <option value=\"5\">35min</option>\n                   <option value=\"5\">45min</option>\n                   <option value=\"5\">50min</option>\n                   <option value=\"5\">55min</option>\n                   <option value=\"5\">Hour</option>\n                </select>\n             </div>\n                </div>\n                <div className=\"col\">\n                   <div className=\"form-group\">\n                <label >Preparation time</label>\n                <select className=\"form-control\" id=\"quantity\" onChange={formik.handleChange} value={formik.values.prepTime}>\n                   <option value=\"1\">5min</option>\n                   <option value=\"2\">10min</option>\n                   <option value=\"3\">15min</option>\n                   <option value=\"4\">20min</option>\n                   <option value=\"5\">25min</option>\n                   <option value=\"5\">30min</option>\n                   <option value=\"5\">35min</option>\n                   <option value=\"5\">45min</option>\n                   <option value=\"5\">50min</option>\n                   <option value=\"5\">55min</option>\n                   <option value=\"5\">Hour</option>\n                </select>\n             </div>\n                </div>\n                <div className=\"col\">\n                   <div className=\"form-group\">\n                <label >Preparation time</label>\n                <select className=\"form-control\" id=\"quantity\" onChange={formik.handleChange} value={formik.values.prepTime}>\n                   <option value=\"1\">5min</option>\n                   <option value=\"2\">10min</option>\n                   <option value=\"3\">15min</option>\n                   <option value=\"4\">20min</option>\n                   <option value=\"5\">25min</option>\n                   <option value=\"5\">30min</option>\n                   <option value=\"5\">35min</option>\n                   <option value=\"5\">45min</option>\n                   <option value=\"5\">50min</option>\n                   <option value=\"5\">55min</option>\n                   <option value=\"5\">Hour</option>\n                </select>\n             </div>\n                </div>\n        </div>\n        <div className=\"row\">\n    {\n        stores.map((el, index) =>\n        <div className=\"card col-3 text-center\" key={index} style={{ width: '18rem', marginLeft: '20px', marginBottom: '20px' }}>\n        {/* <img className=\"card-img-top\" src={`/storage/${el.id}`}/> */}\n        <div className=\"card-body\">\n        <h5 className=\"card-title\">{ el.name }</h5>\n            <p className=\"card-text\">{ el.location }</p>\n            <p className=\"card-text\">{ el.operation_hours }</p>\n            <Link className=\"btn btn-secondary\" onClick={() => {props.handleGetStore(el.id)}} to={`/stores/${el.id}`}>View store</Link>\n        </div>\n    </div>\n    )}\n    </div>\n</React.Fragment>\n     );\n}\n \nexport default Store;","import React from 'react';\nimport axios from 'axios';\nimport {useFormik} from 'formik';\nimport Cookies from 'js-cookie';\n\nconst CreateUser = (props) => {\n\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            email: '',\n            password: '',\n            password_confirmation: ''\n        },\n        onSubmit: values => {\n            // props.handleEditSubmit(values);\n            let createUserForm = new FormData();\n            createUserForm.append('name', values.name);\n            createUserForm.append('email', values.email);\n            createUserForm.append('password', values.password);\n            createUserForm.append('password_confirmation', values.password_confirmation);\n\n            axios\n                .post(`http://localhost:8000/api/register`, createUserForm)\n                .then(function (response) {\n                    Cookies.set('token', `${response.data.access_token}`, {expires: 7})\n                    // cookie('token', response.access_token, { httpOnly: true });\n                axios.post(`http://localhost:8000/api/store`,{ id:response.data.user.id }).then(function(){\n                    console.log(response);\n                })\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n    });\n\n    return (\n        <React.Fragment>\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-header\">Register</div>\n\n                    <div className=\"card-body\">\n                        <form onSubmit={formik.handleSubmit}>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"name\" className=\"col-md-4 col-form-label text-md-right\">Name</label>\n\n                                <div className=\"col-md-6\">\n                                    <input\n                                        id=\"name\"\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"name\"\n                                        value=\"\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.price}\n                                        required/>\n\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"email\" className=\"col-md-4 col-form-label text-md-right\">E-Mail Address</label>\n\n                                <div className=\"col-md-6\">\n                                    <input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        value=\"\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.price}\n                                        required/>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"password\" className=\"col-md-4 col-form-label text-md-right\">Password</label>\n\n                                <div className=\"col-md-6\">\n                                    <input\n                                        id=\"password\"\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        name=\"password\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.price}\n                                        required/>\n\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label\n                                    htmlFor=\"password-confirm\"\n                                    className=\"col-md-4 col-form-label text-md-right\">Confirm Password</label>\n\n                                <div className=\"col-md-6\">\n                                    <input\n                                        id=\"password-confirm\"\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.price}\n                                        name=\"password_confirmation\"\n                                        required/>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row mb-0\">\n                                <div className=\"col-md-6 offset-md-4\">\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={formik.handleSubmit}>\n                                        Register\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        </React.Fragment>\n    );\n}\n\nexport default CreateUser;\n","import React, {useState, useEffect} from 'react';\nimport {useParams, Redirect} from \"react-router-dom\";\nimport {useFormik} from 'formik';\nimport axios from 'axios'\n\nconst EditMeal = (props) => {\n    const [meal,\n        setMeal] = useState([]);\n    const [btnStatus,\n        pressBtn] = useState(false);\n    let {id} = useParams();\n\n    // const getMeal = () => {\n    //     axios\n    //         .get(`http://localhost:8000/api/meal/${id}`)\n    //         .then((response) => {\n    //             // handle success const response =\n    //             console.log(response.data);\n    //             // return\n    //             setMeal(response.data);\n\n    //             // this.setState({meals: response.data});\n\n    //         })\n    //         .catch(function (error) {\n    //             // handle error alert('yessss')\n    //             console.log(error);\n    //         })\n    //         .then(function () {\n    //             // always executed\n    //         });\n    // }\n\n    useEffect(() => {\n        axios\n        .get(`http://localhost:8000/api/meal/${id}`)\n        .then((response) => {\n            // handle success const response =\n            console.log(response.data);\n            // return\n            setMeal(response.data);\n\n            // this.setState({meals: response.data});\n\n        })\n        .catch(function (error) {\n            // handle error alert('yessss')\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n\n    }, [id]);\n\n    const mealObj = props\n        .cart\n        .filter(obj => obj.id === id);\n    let x = mealObj;\n\n    const calPrice = function (selectedQuantity, price) {\n        let totalMealPrice = selectedQuantity * price;\n        return totalMealPrice.toFixed(2);\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            id: id,\n            price: x[0].price,\n            notes: x[0].notes,\n            quantity: x[0].quantity\n        },\n        onSubmit: values => {\n            // values.price = price;\n            values.name = meal.name;\n            console.log(values);\n            // prop.onSubmit(values);\n            props.handleEditSubmit(values);\n            pressBtn(true);\n        }\n    });\n\n    if (btnStatus) {\n        return <Redirect to=\"/cart\"/>\n    } else {\n        return (\n\n            <React.Fragment>\n                <div\n                    className=\"jumbotron\"\n                    style={{\n                    backgroundImage: `url(/img/${meal.imageName})`,\n                    backgroundSize: `cover`\n                }}></div>\n                <div className=\"container\">\n                    <form onSubmit={formik.handleSubmit}>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h1 className=\"text-center\">{meal.name}</h1>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h6 className=\"text-center\">Ingredients: {meal.ingredients}</h6>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h6 className=\"text-center\">R{calPrice(formik.values.quantity, meal.price)}</h6>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label >Quantity</label>\n                            <select\n                                className=\"form-control\"\n                                id=\"quantity\"\n                                onChange={formik.handleChange}\n                                value={formik.values.quantity}>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                            </select>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label >Note to chef</label>\n                            <textarea\n                                className=\"form-control\"\n                                rows=\"3\"\n                                placeholder=\"Example remove lettuce\"\n                                id=\"notes\"\n                                onChange={formik.handleChange}\n                                value={formik.values.notes}/>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col align-self-center\">\n                                <button className=\"btn btn-success\" type=\"submit\">Save changes</button>\n                            </div>\n                        </div>\n                    </form>\n\n                </div>\n\n            </React.Fragment>\n\n        );\n    }\n\n}\n\nexport default EditMeal;\n","import React, { useEffect } from 'react';\nimport {\n   useParams\n } from \"react-router-dom\";\n import { useFormik } from 'formik';\n import axios from 'axios';\n import Cookies from 'js-cookie';\n\n\nconst Login = (props) => {\n\n   let { id } = useParams();\n\n   const formik = useFormik({\n    initialValues: {\n        email: '',\n        password: '',\n    },\n    onSubmit: values => {\n        props.isLoggedIn();\n        let createUserForm = new FormData();\n        createUserForm.append('email', values.email);\n        createUserForm.append('password', values.password);\n        login(createUserForm);\n    },\n    });\n\n    let login = (form) => {\n        axios.post(`http://localhost:8000/api/login`, form)\n        .then( (res) =>  {\n            Cookies.set('username', `${res.data.user.name}`, {expires: 7})\n            Cookies.set('token', `${res.data.access_token}`, {expires: 7})\n            Cookies.set('id', `${res.data.user.id}`, {expires: 7})\n        //     setPosted(true);\n        // //    console.log(response);\n        //     if (props.isLoggedIn) {\n            console.log(res);\n\n        //     }\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n\n    }\n\n    useEffect(() => {\n        // var pusher = new Pusher('20b28ddb2fe835b19efb', {\n        //     authEndpoint: 'http://localhost:8000/broadcasting/auth',\n        //     cluster: 'ap1',\n        //     encrypted: true,\n        //     headers: {\n        //       Accept: 'application/json',\n        //       Authorization: 'Bearer ' + Cookies.get('token'),\n        //     }\n        //   });\n        //   var channel = pusher.subscribe('order-complete-2');\n        //   // console.log(channel);\n        //   channel.bind('CompletedOrder', data => {\n        //     // this.setState({ chats: [...this.state.chats, data], test: '' });\n        //     alert(data);\n        //     console.log(data);\n        //   });\n        // this.handleTextChange = this.handleTextChange.bind(this);\n      })\n\n    return (\n        <React.Fragment>\n<div className=\"col-md-12\">\n            <div className=\"card\">\n                <div className=\"card-header\">Login</div>\n\n                <div className=\"card-body\">\n                    <form onSubmit={formik.handleSubmit}>\n                        {/* @csrf */}\n\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"email\" className=\"col-md-4 col-form-label text-md-right\">Email address</label>\n\n                            <div className=\"col-md-8\">\n                                <input id=\"email\" type=\"email\" className=\"form-control\" name=\"email\" onChange={formik.handleChange} value={formik.values.email} required  />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"password\" className=\"col-md-4 col-form-label text-md-right\">Password</label>\n\n                            <div className=\"col-md-8\">\n                                <input id=\"password\" type=\"password\" className=\"form-control\" name=\"password\" required  onChange={formik.handleChange} value={formik.values.password}/>\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row mb-0\">\n                            <div className=\"col-md-8 offset-md-4\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                                    Login\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n        </React.Fragment>\n\n     );\n}\n\nexport default Login;\n","import React from 'react';\nimport axios from 'axios';\nimport {useFormik} from 'formik';\nimport Cookies from 'js-cookie';\n\n    const Register = (props) => {\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            email: '',\n            password: '',\n            password_confirmation: ''\n        },\n        onSubmit: values => {\n            // props.handleEditSubmit(values);\n            let createUserForm = new FormData();\n            createUserForm.append('name', values.name);\n            createUserForm.append('email', values.email);\n            createUserForm.append('password', values.password);\n            createUserForm.append('password_confirmation', values.password_confirmation);\n\n            axios\n                .post(`http://localhost:8000/api/register`, createUserForm)\n                .then(function (response) {\n                    Cookies.set('token', `${response.data.access_token}`, {expires: 7})\n                    // cookie('token', response.access_token, { httpOnly: true });\n                axios.post(`http://localhost:8000/api/store`,{ id:response.data.user.id }).then(function(){\n                    console.log(response);\n                })\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n    });\n\n    return (\n        <React.Fragment>\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-header\">Register</div>\n\n                    <div className=\"card-body\">\n                        <form onSubmit={formik.handleSubmit}>\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"name\" className=\"col-md-4 col-form-label text-md-right\">Name</label>\n\n                                <div className=\"col-md-6\">\n                                    <input\n                                        id=\"name\"\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"name\"\n                                        value=\"\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.price}\n                                        required/>\n\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"email\" className=\"col-md-4 col-form-label text-md-right\">E-Mail Address</label>\n\n                                <div className=\"col-md-6\">\n                                    <input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        value=\"\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.price}\n                                        required/>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"password\" className=\"col-md-4 col-form-label text-md-right\">Password</label>\n\n                                <div className=\"col-md-6\">\n                                    <input\n                                        id=\"password\"\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        name=\"password\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.price}\n                                        required/>\n\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label\n                                    htmlFor=\"password-confirm\"\n                                    className=\"col-md-4 col-form-label text-md-right\">Confirm Password</label>\n\n                                <div className=\"col-md-6\">\n                                    <input\n                                        id=\"password-confirm\"\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.price}\n                                        name=\"password_confirmation\"\n                                        required/>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row mb-0\">\n                                <div className=\"col-md-6 offset-md-4\">\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={formik.handleSubmit}>\n                                        Register\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        </React.Fragment>\n    );\n }\n\nexport default Register;\n","import React from 'react';\n import { useFormik } from 'formik';\nimport axios from 'axios'\n\n\nconst CreateMeal = (props) => {\n\n    const createMeal = function(data) {\n        axios.post(`http://localhost:8000/api/meal`, data, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        })\n        .then( (response) =>  {\n           this.setState({isPost: true});\n           console.log(response);\n\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n      }\n\n    const formik = useFormik({\n        initialValues: {\n            productName: '',\n            price:  0,\n            ingredients:  '',\n            imageUpload: ''\n        },\n        onSubmit: values => {\n            // props.handleEditSubmit(values);\n            let createMealForm = new FormData();\n            createMealForm.append('productName', values.productName);\n            // console.log(createMealForm);\n            createMealForm.append('ingredients', values.ingredients);\n            createMealForm.append('price', values.price);\n            createMealForm.append('imageUpload', values.imageUpload);\n            // console.log(values.imageUpload);\n            createMeal(createMealForm);\n            // pressBtn(true);\n        },\n        });\n\n    return (\n        <React.Fragment>\n            {/* <h1>test</h1> */}\n<div className=\"container\">\n                <form onSubmit={formik.handleSubmit}>\n\n                <div className=\"form-group\">\n                   <label>Product name</label>\n                   <input className=\"form-control\" placeholder=\"Example remove lettuce\" id=\"productName\"  onChange={formik.handleChange} value={formik.values.productName}/>\n                </div>\n\n                <div className=\"form-group\">\n                   <label >Ingredients</label>\n                   <input className=\"form-control\" placeholder=\"Example remove lettuce\" id=\"ingredients\" onChange={formik.handleChange} value={formik.values.ingredients}/>\n                </div>\n\n                <div className=\"form-group\">\n                   <label >Price</label>\n                   <input className=\"form-control\" placeholder=\"Example remove lettuce\" id=\"price\"  onChange={formik.handleChange} value={formik.values.price}/>\n                </div>\n\n                <div className=\"form-group\">\n                   <label >Image upload</label>\n                   <input className=\"form-control\" type=\"file\" className=\"form-control-file\" id=\"imageUpload\" name=\"imageUpload\" onChange={(event) => {\n                    formik.setFieldValue(\"imageUpload\", event.currentTarget.files[0]);\n                    }}/>\n                </div>\n\n                <div className=\"row\">\n                   <div className=\"col align-self-center\">\n                      <button className=\"btn btn-success pull-right\" type=\"submit\">Save</button>\n                   </div>\n                </div>\n                </form>\n             </div>\n        </React.Fragment>\n\n     );\n}\n\nexport default CreateMeal;\n","import React, { useState, useEffect} from 'react';\nimport {\n    useParams\n  } from \"react-router-dom\";\n  import Cookies from 'js-cookie';\n  import { useFormik } from 'formik';\n  import axios from 'axios';\n\nconst Orders = () => {\n    const {id} = useParams();\n    const [order,\n        setOrder] = useState([]);\n    const user_id = Cookies.get('id');\n    const statusObj = {1: 'Received', 2: 'Preparing', 3: 'Completed'};\n    console.log(user_id);\n \n    const calPrice= (obj) => {\n        let newObj = JSON.parse(obj);\n        console.log('object');\n        console.log(newObj);\n        console.log(obj);\n        let calPrice = 0;\n        newObj.map((el, index)=>{\n            calPrice = el.quantity * (calPrice + parseFloat(el.price));\n            \n        })\n        \n        return calPrice;\n    }\n    \n    useEffect(() => {\n        axios\n            .get(`http://localhost:8000/api/userorder/${user_id}`) \n            .then((response) => {\n                setOrder(response.data);\n                console.log(response.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n            .then(function () {\n\n            });\n\n    }, [user_id]);\n\n    return (\n        <React.Fragment>\n        <table className=\"table\">\n            <thead>\n                <tr>\n                <th>Order #</th>\n                <th>Quantity</th>\n                <th>Price</th>\n                <th>Status</th>\n                </tr>\n\n            </thead>\n            <tbody>\n\n                {\n                order.map((el, index) =>\n                {\n                    if (el !== 'undefined') {\n                   return <tr key={el.id}>\n                        <td>#{el.id}</td>\n                        <td>{el.status}</td>\n                        <td>R{calPrice(el.formConfig)}</td>\n                        <td>{statusObj[el.status]}</td>\n                        </tr>\n                    }\n                }\n\n                )\n            }\n                <tr>\n                <td></td>\n                <td></td>\n                <td>{}</td>\n                </tr>\n            </tbody>\n        </table>\n        {/* <form onSubmit={formik.handleSubmit}> */}\n        {/* <input type=\"hidden\" name=\"order\" id=\"order\" onChange={formik.handleChange} value={formik.values.order}/> */}\n        {/* <button className=\"btn btn-primary\" type=\"submit\">post cart</button> */}\n        {/* </form> */}\n    </React.Fragment>\n    );\n}\n \nexport default Orders;","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Switch, Route, useLocation} from \"react-router-dom\";\n\nimport Meal from './meal';\nimport Meals from './meals';\nimport Store from './store';\nimport Stores from './stores';\nimport CreateUser from './createUser';\nimport Cart from './cart';\nimport EditMeal from './editMeal';\nimport Login from './auth/login';\nimport Register from './auth/register';\n// import createMeal from './auth/createMeal';\nimport CreateMeal from './createMeal';\nimport Orders from './orders';\n\n\n// import { useTransition, animated } from 'react-spring'\n\nconst Body = (props) => {\n  \n\n\n    const [cart, setCart] = useState([{id:\"3\",price:\"54\",notes:\"\",quantity:0,name:\"Dinner\",store_id:11}]);\n\n    //   render() { const location = useLocation() const transitions =\n    // useTransition(location, location => location.pathname, {   from: { opacity:\n    // 0, transform: 'translate3d(100%,0,0)' },   enter: { opacity: 1, transform:\n    // 'translate3d(0%,0,0)' },   leave: { opacity: 0, transform:\n    // 'translate3d(-50%,0,0)' }, })\n\n    return (\n        <React.Fragment>\n            \n            <div className=\"py-4 container\">\n                <div className=\"justify-content-center col-12\">\n                \n                    <Route exact path=\"/stores\">\n                        <Stores handleGetStore={props.handleGetStore}/>\n                    </Route>\n                    <Route path=\"/stores/:id\">\n                        <Store\n                            cart={props.cart}\n                            storeDetails={props.storeDetails}\n                            handleStoreImageUpdate={props.handleStoreImageUpdate}\n                            handleCartSubmit={props.handleCartSubmit}\n                            setShowLoginModal={props.setShowLoginModal}\n                            checkLogin={props.checkLogin}\n                             />\n                    </Route>\n                    <Route path=\"/meals\">\n                        <Meals \n                        //  meals={props.meals}\n                     // key={props.meals.length}\n                    \n                        />\n                    </Route>\n                    <Route path=\"/meal/:id\">\n                        <Meal\n                            meals={props.meals}\n                            cart={props.cart}\n                            onQuantityChange={props.onQuantityChange}\n                            onNoteChange={props.onNoteChange}\n                            orderForm={props.orderForm}\n                            onPriceChange={props.onPriceChange}\n                            onMealChange={props.onMealChange}\n                            onSubmit={props.onSubmit}\n                            handleCartSubmit={props.handleCartSubmit}/>\n\n                    </Route>\n                    <Route path=\"/create-meal\">\n                        <CreateMeal/>\n                    </Route>\n                    <Route path=\"/create-user\">\n                        <CreateUser/>\n                    </Route>\n                    {/* <Route exact path=\"/cart\">\n                        <Cart\n                            cart={props.cart}\n                            ontotalPriceChange={props.ontotalPriceChange}\n                            totalPrice={props.totalPrice}\n                            onRemoveItemInCart={props.onRemoveItemInCart}\n                            handleEdit={props.handleEdit}\n                            handleEditFormChange={props.handleEditForm}\n                            isLoggedIn={props.isLoggedIn}\n                            submitCart={props.submitCart}/>\n                    </Route> */}\n                    <Route path=\"/cart/edit/:id\">\n                        <EditMeal\n                            cart={props.cart}\n                            meals={props.meals}\n                            onNoteChange={props.onNoteChange}\n                            onPriceChange={props.onPriceChange}\n                            onMealChange={props.onMealChange}\n                            orderForm={props.orderForm}\n                            onQuantityChange={props.onQuantityChange}\n                            handleEditSubmit={props.onEditSubmit}/>\n                    </Route>\n                    <Route path=\"/login\">\n                        <Login isLoggedIn={props.isLoggedIn}/>\n                    </Route>\n                    <Route path=\"/register\">\n                        <Register/>\n                    </Route>\n                    <Route path=\"/orders\">\n                        <Orders/>\n                    </Route>\n                </div>\n            </div>\n        </React.Fragment>\n\n    );\n}\n// }\n\nexport default Body;\n","import React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport { useFormik } from 'formik';\n import axios from 'axios';\n import Cookies from 'js-cookie';\nimport {faExclamationCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst LoginModal = (props) => {\n    // const [show, setShow] = useState(false); const handleClose = () =>\n    // setShow(false); const handleShow = () => setShow(true);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        onSubmit: values => {\n            \n            let createUserForm = new FormData();\n            createUserForm.append('email', values.email);\n            createUserForm.append('password', values.password);\n            login(createUserForm);\n            \n        },\n        });\n\n    let login = (form) => {\n        axios.post(`http://localhost:8000/api/login`, form)\n        .then( (res) =>  {\n            Cookies.set('username', `${res.data.user.name}`, {expires: 7})\n            Cookies.set('token', `${res.data.access_token}`, {expires: 7})\n            Cookies.set('id', `${res.data.user.id}`, {expires: 7})\n\n            props.setLogin(true);\n            props.setShowLoginModal(false);\n            props.handleAlert('Successfully Logged in!');\n        //     setPosted(true);\n        // //    console.log(response);\n        //     if (props.isLoggedIn) {\n            console.log(res);\n\n        //     }\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n\n    }\n\n    \n    return (\n        <React.Fragment>\n\n            <Modal show={props.showLoginModal} onHide={props.setShowLoginModal} centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Log in</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container mb-4\">\n                        <div className=\"row\">\n                            <div className=\"col mb-3\">\n                            </div>\n                            </div>\n                            <div className=\"col\">\n                            <form onSubmit={formik.handleSubmit}>\n                        {/* @csrf */}\n                        <div className=\"form-group row\">\n                        <h1 className=\"col text-center\">touch&go</h1>\n                            <label htmlFor=\"email\" className=\"col-form-label text-center\"> Login to your account and try again or register for a new account.</label>\n                        </div>\n                        <div className=\"form-group row\">\n                            {/* <label htmlFor=\"email\" className=\"col-form-label text-center\">Email address</label> */}\n\n                            {/* <div className=\"col-md-8\"> */}\n                                <input id=\"email\" type=\"email\" placeholder=\"email\" className=\"form-control\" name=\"email\" onChange={formik.handleChange} value={formik.values.email} required  />\n                            {/* </div> */}\n                        </div>\n\n                        <div className=\"form-group row\">\n                            {/* <label htmlFor=\"password\" className=\"col-form-label text-center\">Password</label> */}\n\n                            {/* <div className=\"col-md-8\"> */}\n                                <input id=\"password\" type=\"password\" placeholder=\"password\"  className=\"form-control\" name=\"password\" required  onChange={formik.handleChange} value={formik.values.password}/>\n                            {/* </div> */}\n                        </div>\n\n                        <div className=\"form-group row mb-0\">\n                            <div className=\"col-md-12\">\n                                <button type=\"submit\" className=\"btn btn-info btn-block\">\n                                    Log in\n                                </button>\n                            </div>\n                        </div>\n                        <hr/>\n                        {/* <div className=\"form-group row mb-0\">\n                            <div className=\"col-md-12\">\n                                <button type=\"button\" className=\"btn btn-info btn-block\">\n                                    Register New Account\n                                </button>\n                            </div>\n                        </div> */}\n                    </form>\n                            </div>\n                        </div>\n                    {/* </div> */}\n                </Modal.Body>\n                {/* <Modal.Footer>\n                    <Button variant=\"secondary\" //   onClick={handleClose\n                >\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" //   onClick={handleClose\n                >\n                        Save Changes\n                    </Button>\n                </Modal.Footer> */}\n            </Modal>\n        </React.Fragment>\n\n    )\n                        }\n                    \nexport default LoginModal;\n","import React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport { useFormik } from 'formik';\n import axios from 'axios';\n import Cookies from 'js-cookie';\nimport {faExclamationCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst RegisterModal = (props) => {\n    // const [show, setShow] = useState(false); const handleClose = () =>\n    // setShow(false); const handleShow = () => setShow(true);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        onSubmit: values => {\n            \n            let createUserForm = new FormData();\n            createUserForm.append('email', values.email);\n            createUserForm.append('password', values.password);\n            login(createUserForm);\n            \n        },\n        });\n\n    let login = (form) => {\n        axios.post(`http://localhost:8000/api/login`, form)\n        .then( (res) =>  {\n            Cookies.set('username', `${res.data.user.name}`, {expires: 7})\n            Cookies.set('token', `${res.data.access_token}`, {expires: 7})\n            Cookies.set('id', `${res.data.user.id}`, {expires: 7})\n\n            props.setLogin(true);\n            props.setShowLoginModal(false);\n            props.handleAlert('Successfully Logged in!');\n        //     setPosted(true);\n        // //    console.log(response);\n        //     if (props.isLoggedIn) {\n            console.log(res);\n\n        //     }\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n\n    }\n\n    \n    return (\n        <React.Fragment>\n\n            <Modal show={props.showRegisterModal} onHide={props.setShowRegisterModal} centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Sign Up</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col mb-3\">\n                            </div>\n                            </div>\n                            <div className=\"col\">\n                            <form onSubmit={formik.handleSubmit}>\n                        {/* @csrf */}\n                        <div className=\"form-group row\">\n                        <h1 className=\"col text-center\">touch&go</h1>\n                            {/* <label htmlFor=\"email\" className=\"col-form-label text-center\"> It's quick and easy.</label> */}\n                        </div>\n                        <div className=\"form-group row\">\n                        <p className=\"col text-center\">Sign up for a free account.</p>\n                            {/* <label htmlFor=\"email\" className=\"col-form-label text-center\"> It's quick and easy.</label> */}\n                        </div>\n                        <div className=\"form-group row\">\n                            {/* <label htmlFor=\"email\" className=\"col-form-label text-center\">Email address</label> */}\n\n                            {/* <div className=\"col-md-8\"> */}\n                                <input id=\"email\" type=\"email\" placeholder=\"email\" className=\"form-control\" name=\"email\" onChange={formik.handleChange} value={formik.values.email} required  />\n                            {/* </div> */}\n                        </div>\n\n                        <div className=\"form-group row\">\n                            {/* <label htmlFor=\"password\" className=\"col-form-label text-center\">Password</label> */}\n\n                            {/* <div className=\"col-md-8\"> */}\n                                <input id=\"password\" type=\"password\" placeholder=\"password\"  className=\"form-control\" name=\"password\" required  onChange={formik.handleChange} value={formik.values.password}/>\n                            {/* </div> */}\n                        </div>\n                        <hr/>\n                        <div className=\"form-group row mb-0\">\n                            <div className=\"col-md-12\">\n                                <button type=\"submit\" className=\"btn btn-info btn-block\">\n                                    Register New Account\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                            </div>\n                        </div>\n                    {/* </div> */}\n                </Modal.Body>\n                {/* <Modal.Footer>\n                    <Button variant=\"secondary\" //   onClick={handleClose\n                >\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" //   onClick={handleClose\n                >\n                        Save Changes\n                    </Button>\n                </Modal.Footer> */}\n            </Modal>\n        </React.Fragment>\n\n    )\n                        }\n                    \nexport default RegisterModal;\n","import React from 'react';\nimport {Toast} from 'react-bootstrap';\n\nconst Alert = (props) => {\n    // const [show, setShow] = useState(false); const handleClose = () =>\n    // setShow(false); const handleShow = () => setShow(true);\n\n    return (\n        <React.Fragment>\n\n            <Toast\n                show={props.showAlert}\n                delay={3000}\n                autohide\n                style={{\n                position: 'absolute',\n                top: '450px',\n                right: '60px',\n                width: '215px',\n                backgroundColor: 'lightsteelblue',\n                color: '#fff'\n            }}>\n                <Toast.Header>\n                    <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\"/>\n                    <strong className=\"mr-auto\">Touch & Go</strong>\n                    {/* <small>11 mins ago</small> */}\n                </Toast.Header>\n                <Toast.Body>{props.showAlertMessage}</Toast.Body>\n            </Toast>\n        </React.Fragment>\n\n    )\n}\n\nexport default Alert;\n","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, useLocation, Link} from \"react-router-dom\";\nimport Cookies from 'js-cookie';\nimport {faShoppingCart} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\n\nfunction SideBar(props) {\n    const [token,\n        setToken] = useState(Cookies.get('token'));\n    const location = useLocation();\n    const [selectedNav,\n        setSelectedNav] = useState(location.pathname);\n    function logout() {\n        alert('test');\n        Cookies.remove('token');\n    }\n\n    const handleActive = (clickedNav) => {\n        setSelectedNav(clickedNav);\n        console.log(location.pathname);\n    }\n\n    // if (props.getLoginStatus) {\n        return (\n            <div class=\"sidebar\">\n            <a class=\"active\" href=\"#home\">Home</a>\n            <a href=\"#news\">News</a>\n            <a href=\"#contact\">Contact</a>\n            <a href=\"#about\">About</a>\n          </div>\n        );\n    // }\n\n}\n\nexport default SideBar;\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Redirect, Switch, Route} from \"react-router-dom\";\nimport axios from 'axios';\n// import axios from 'axios';\n// import Echo from 'laravel-echo';\n\nimport Navbar from './navbar';\nimport Body from './body';\nimport Store from './store';\n// import Cookies from 'js-cookie';\nimport LoginModal from './loginModal'\nimport RegisternModal from './registerModal'\nimport Alert from './alert'\nimport SideBar from './sidebar'\n\nconst Index = (props) => {\n    // state = {     orderForm: {         id: null,         meal: '', quantity: '1',\n    //         price: '',         notes: ''     },     cart: [], totalPrice: 0,\n    // meals: [],     user: {         isLoggedIn: false, isAdmin: false, username:\n    // Cookies.get('username'),         token: Cookies.get('token'),   id:\n    // Cookies.get('id'),     },     store: [] }\n    const [storeImage, setStoreImage] = useState([]);\n    const [cart, setCart] = useState([]);\n    const [showProduct, setShowProduct] = useState(false);\n    const [isLoggedIn, setLogin] = useState(false);\n    const [showLoginModal, setShowLoginModal] = useState(false);\n    const [showRegisterModal, setShowRegisterModal] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n    const [showAlertMessage, setShowAlertMessage] = useState('');\n    const [user, setUser] = useState([]);\n    const [getStore, setStore] = useState([]);\n\n\n    const [products,\n        setProducts] = useState([]);\n    const [modalproduct,\n        setModalProduct] = useState([]);\n    const [storeDetails,\n        setStoreDetails] = useState([]);\n    // const [show,\n    //     setShow] = useState(false);\n    // console.log(imageName);\n\n    const showProductModal = (id) => {\n        // open div\n        setShowProduct(true);\n        setModalProduct(products[id]);\n\n    }\n\n    const closeProductModal = () => {\n        setShowProduct(false);\n        setModalProduct([]);\n    }\n\n    // componentDidMount() {     // this.handleTextChange =\n    // this.handleTextChange.bind(this); } componentDidUpdate() {     // Typical\n    // usage (don't forget to compare props):    if (this.state.isLoggedIn) {  //\n    // window.Pusher = require('pusher-js');         window.Echo = new\n    // Echo({broadcaster: 'pusher', key: '20b28ddb2fe835b19efb', cluster: 'ap1',\n    // forceTLS: true});         window             .Echo\n    // .channel('order-complete.2') .listen('CompletedOrder', (e) => {\n    // console.log(e);      alert(e);             });     } }\n        \n    const handleAlert = (message) => {\n        setShowAlert(true);\n        setShowAlertMessage(message);\n        setTimeout(() => {\n            setShowAlert(false)\n          }, 3000);\n\n        // \n    }\n\n    const handleCartSubmit = (cartObj) => {\n        let oldObj = cart;\n        oldObj.push(cartObj)\n        setCart(oldObj)\n      \n    }\n\n    const handleCartDelete = (deleteId) => {\n        // let oldObj = cart;\n        let deleteItem = cart.filter((el, index) => deleteId != index)\n        setCart(deleteItem);\n      \n    }\n\n    const handleCartView = (deleteId) => {\n        // let oldObj = cart;\n        let deleteItem = cart.filter((el, index) => deleteId != index)\n        setCart(deleteItem);\n      \n    }\n    \n    const handleModalLogin = (checkLogin) => {\n        alert('modal status changed');\n        setLogin(true);\n        setShowLoginModal(false);\n        \n    }\n\n    const checkLogin = () => {\n        if(!isLoggedIn){\n            (()=>{setShowLoginModal(true);})();\n            return false;\n        }\n        return true;\n    }\n\n\n    const handleStoreImageUpdate = (data) => {\n        // this.setState({store: data});\n        console.log(data);\n        setStoreImage(data);\n        // alert('status changed');\n    }\n\n\n    const handleGetStore = (id) => {\n        \n        axios\n                .get(`http://localhost:8000/api/store/${id}`)\n                .then((response) => {\n                    setStore(JSON.parse(response.data[0].config));\n                    setProducts(response.data[1]);\n                    console.log(response.data[0]);\n\n                })\n                .catch(function (error) {\n                    console.log(error);\n                })\n                .then(function () {});\n    }\n\n    // const \n\n\n    return (\n        <React.Fragment>\n            <BrowserRouter>\n                {/* <SideBar/>  */}\n                <Navbar isLoggedIn={isLoggedIn} setShowLoginModal={setShowLoginModal} setShowRegisterModal={setShowRegisterModal}/>\n                <Switch>\n                    <Route path=\"/stores/:id\">\n                        <Store\n                            cart={cart}\n                            getStore={getStore}\n                            handleStoreImageUpdate={props.handleStoreImageUpdate}\n                            setShowLoginModal={setShowLoginModal}\n                            isLoggedIn={isLoggedIn} \n                            handleCartSubmit={handleCartSubmit} \n                            checkLogin={checkLogin}\n                            handleAlert={handleAlert}\n                            handleCartDelete={handleCartDelete}\n                            setProducts={setProducts}\n                            setStoreDetails={setStoreDetails}\n                            showProductModal={showProductModal}\n                            products={products}\n                            modalproduct={modalproduct}\n                            closeProductModal={closeProductModal}\n                            handleCartView={handleCartView}\n                            handleGetStore={handleGetStore}\n                            showProduct={showProduct}\n                            />\n                    </Route>\n                    <Body \n                     handleStoreImageUpdate={handleStoreImageUpdate} storeImage={storeImage} handleGetStore={handleGetStore} // onSubmitonSubmit={handleCartSubmit} // meals={this.state.meals}  onNoteChange={handleNoteChange} onQuantityChange={handleQuantityChange} onPriceChange={handlePriceChange} onMealChange={handleMealChange} onRemoveItemInCart={removeItemInCart} handleEditForm={handleEditForm} onEditSubmit={handleEditSubmit} // getMeals={getMeals} // submitCart={submitCart\n                    handleCartSubmit={handleCartSubmit}  showLoginModal={showLoginModal} handleModalLogin={handleModalLogin}/>\n                </Switch>\n                 <LoginModal handleAlert={handleAlert} showLoginModal={showLoginModal} setShowLoginModal={setShowLoginModal} handleModalLogin={handleModalLogin} setLogin={setLogin} isLoggedIn={isLoggedIn} />\n                 <RegisternModal handleAlert={handleAlert} showRegisterModal={showRegisterModal} setShowRegisterModal={setShowRegisterModal} />\n                <Alert showAlert={showAlert} showAlertMessage={showAlertMessage}/>\n            </BrowserRouter>\n        </React.Fragment>\n        ) }\n        \n        \n        export default Index; \n        if (document.getElementById('app')) {ReactDOM.render(\n            <Index/>, document.getElementById('app'));\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './sb-admin-2.min.css';\n// import './all.css';\nimport App from './components/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}